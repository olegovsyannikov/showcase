apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zmq.fullname" . }}
  labels:
    {{- include "zmq.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "zmq.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "zmq.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "zmq.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: zmq
              containerPort: 5555
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 5555
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 5555
            initialDelaySeconds: 5
            periodSeconds: 10
          env:
            - name: DB_CONNECTION
              valueFrom:
                configMapKeyRef:
                  name: sql-db-creds
                  key: connection
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: sql-db-creds
                  key: host
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: sql-db-creds
                  key: port
            - name: DB_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: sql-db-creds
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: sql-db-creds
                  key: password
            - name: DB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: sql-db-creds
                  key: dbname
          envFrom:
            - configMapRef:
                name: api-env
          volumeMounts:
            - name: google-accounts
              mountPath: /app/storage/
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: google-accounts
          configMap:
            name: google-accounts

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
